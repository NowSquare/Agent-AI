# ==============================================================================
# Agent-AI — Docker (Windows/Linux/macOS; Dev or Prod)
# ==============================================================================
# Containers: app, postgres, redis, ollama, clamav
# ==============================================================================

APP_NAME="Agent AI"
APP_ENV=local
APP_DEBUG=true
APP_URL="http://localhost:8080"
APP_TIMEZONE="Europe/Amsterdam"

# ------------------------------------------------------------------------------
# Database (PostgreSQL in Docker)
# ------------------------------------------------------------------------------
DB_CONNECTION=pgsql
DB_HOST=postgres
DB_PORT=5432
DB_DATABASE=agent_ai
DB_USERNAME=agent_user
DB_PASSWORD="your_secure_password"

# ------------------------------------------------------------------------------
# Cache / Queues / Sessions (Redis container)
# ------------------------------------------------------------------------------
CACHE_DRIVER=redis
SESSION_DRIVER=redis
QUEUE_CONNECTION=redis
REDIS_HOST=redis
REDIS_PORT=6379

# ------------------------------------------------------------------------------
# Outbound Mail — Postmark only (no SMTP)
# ------------------------------------------------------------------------------
# MAIL_FROM_ADDRESS is the *sender identity* used by Laravel.
MAIL_MAILER="postmark"
POSTMARK_TOKEN="your-real-postmark-server-token"
POSTMARK_MESSAGE_STREAM_ID="outbound"   # default outbound stream name
MAIL_FROM_ADDRESS="noreply@agent-ai.test"
MAIL_FROM_NAME="Agent AI"

# ------------------------------------------------------------------------------
# Inbound Mail — Postmark webhook
# ------------------------------------------------------------------------------
# AGENT_MAIL is the *public-facing* address shown to users/docs.
# Send mail TO this Postmark inbound address; Postmark will POST JSON to the app.
AGENT_MAIL="<hash>@inbound.postmarkapp.com"

# Secure the inbound webhook with HTTP Basic Auth:
# In Postmark inbound stream → Webhook URL, include creds inline:
#   https://WEBHOOK_USER:WEBHOOK_PASS@<ngrok-subdomain>.ngrok-free.app/webhooks/inbound-email
# Example:
#   https://postmark:my-long-password@curly-bear.ngrok-free.app/webhooks/inbound-email
WEBHOOK_USER="postmark"
WEBHOOK_PASS="your-very-long-random-password-here"

# ------------------------------------------------------------------------------
# ngrok Setup (for local inbound testing with Docker)
# ------------------------------------------------------------------------------
# The app is served on host port 8080 (mapped from container).
# 1) Start ngrok to expose port 8080:
#    ngrok http --url=curly-bear.ngrok-free.app 8080
# 2) Copy the ngrok HTTPS URL (e.g., https://curly-bear.ngrok-free.app).
# 3) In Postmark inbound settings, set:
#    https://postmark:your-very-long-random-password-here@curly-bear.ngrok-free.app/webhooks/inbound-email
# 4) Send an email to AGENT_MAIL; Postmark will POST JSON to your app.

# ------------------------------------------------------------------------------
# LLM (Ollama container)
# ------------------------------------------------------------------------------
LLM_PROVIDER="ollama"
LLM_MODEL="gpt-oss:20b"
OLLAMA_BASE_URL="http://ollama:11434"

# ------------------------------------------------------------------------------
# Antivirus (ClamAV container)
# ------------------------------------------------------------------------------
CLAMAV_HOST=clamav
CLAMAV_PORT=3310

# ------------------------------------------------------------------------------
# Filesystem
# ------------------------------------------------------------------------------
FILESYSTEM_DISK=local
